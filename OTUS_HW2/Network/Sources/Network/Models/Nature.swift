//
// Nature.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Nature: Codable, JSONEncodable, Hashable {

    public var id: Int
    public var name: String
    public var decreasedStat: String
    public var increasedStat: String
    public var hatesFlavor: String
    public var likesFlavor: String
    public var pokeathlonStatChanges: [NatureStatChange]?
    public var moveBattleStylePreferences: [MoveBattleStylePreference]?

    public init(id: Int, name: String, decreasedStat: String, increasedStat: String, hatesFlavor: String, likesFlavor: String, pokeathlonStatChanges: [NatureStatChange]? = nil, moveBattleStylePreferences: [MoveBattleStylePreference]? = nil) {
        self.id = id
        self.name = name
        self.decreasedStat = decreasedStat
        self.increasedStat = increasedStat
        self.hatesFlavor = hatesFlavor
        self.likesFlavor = likesFlavor
        self.pokeathlonStatChanges = pokeathlonStatChanges
        self.moveBattleStylePreferences = moveBattleStylePreferences
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case decreasedStat = "decreased_stat"
        case increasedStat = "increased_stat"
        case hatesFlavor = "hates_flavor"
        case likesFlavor = "likes_flavor"
        case pokeathlonStatChanges = "pokeathlon_stat_changes"
        case moveBattleStylePreferences = "move_battle_style_preferences"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(decreasedStat, forKey: .decreasedStat)
        try container.encode(increasedStat, forKey: .increasedStat)
        try container.encode(hatesFlavor, forKey: .hatesFlavor)
        try container.encode(likesFlavor, forKey: .likesFlavor)
        try container.encodeIfPresent(pokeathlonStatChanges, forKey: .pokeathlonStatChanges)
        try container.encodeIfPresent(moveBattleStylePreferences, forKey: .moveBattleStylePreferences)
    }
}

