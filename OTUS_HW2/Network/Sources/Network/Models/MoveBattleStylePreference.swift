//
// MoveBattleStylePreference.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MoveBattleStylePreference: Codable, JSONEncodable, Hashable {

    static let lowHpPreferenceRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 100, exclusiveMaximum: false, multipleOf: nil)
    static let highHpPreferenceRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 100, exclusiveMaximum: false, multipleOf: nil)
    /** Chance of using the move, in percent, if HP is under one half of maximum HP. */
    public var lowHpPreference: Int
    /** Chance of using the move, in percent, if HP is over one half of maximum HP. */
    public var highHpPreference: Int
    public var moveBattleStyle: NamedAPIResource

    public init(lowHpPreference: Int, highHpPreference: Int, moveBattleStyle: NamedAPIResource) {
        self.lowHpPreference = lowHpPreference
        self.highHpPreference = highHpPreference
        self.moveBattleStyle = moveBattleStyle
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case lowHpPreference = "low_hp_preference"
        case highHpPreference = "high_hp_preference"
        case moveBattleStyle = "move_battle_style"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(lowHpPreference, forKey: .lowHpPreference)
        try container.encode(highHpPreference, forKey: .highHpPreference)
        try container.encode(moveBattleStyle, forKey: .moveBattleStyle)
    }
}

