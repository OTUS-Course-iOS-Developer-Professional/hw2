//
// Stat.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Stat: Codable, JSONEncodable, Hashable {

    public var id: Int
    public var name: String
    public var gameIndex: Int
    public var isBattleOnly: Bool?
    public var affectingMoves: MoveStatAffectSets?
    public var affectingNatures: NatureStatAffectSets?

    public init(id: Int, name: String, gameIndex: Int, isBattleOnly: Bool? = nil, affectingMoves: MoveStatAffectSets? = nil, affectingNatures: NatureStatAffectSets? = nil) {
        self.id = id
        self.name = name
        self.gameIndex = gameIndex
        self.isBattleOnly = isBattleOnly
        self.affectingMoves = affectingMoves
        self.affectingNatures = affectingNatures
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case gameIndex = "game_index"
        case isBattleOnly = "is_battle_only"
        case affectingMoves = "affecting_moves"
        case affectingNatures = "affecting_natures"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(gameIndex, forKey: .gameIndex)
        try container.encodeIfPresent(isBattleOnly, forKey: .isBattleOnly)
        try container.encodeIfPresent(affectingMoves, forKey: .affectingMoves)
        try container.encodeIfPresent(affectingNatures, forKey: .affectingNatures)
    }
}

