//
// Pokemon.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Pokemon: Codable, JSONEncodable, Hashable {

    public var id: Int
    public var name: String
    public var baseExperience: Int
    public var height: Int
    public var isDefault: Bool
    public var order: Int
    public var weight: Int
    public var abilities: [PokemonAbility]
    public var forms: [PokemonForm]
    public var gameIndices: [VersionGameIndex]
    public var heldItems: [PokemonHeldItem]
    public var locationAreaEncounters: String
    public var moves: [PokemonMove]
    public var sprites: PokemonSprites
    public var species: NamedAPIResource
    public var stats: [PokemonStat]
    public var types: [PokemonType]

    public init(id: Int, name: String, baseExperience: Int, height: Int, isDefault: Bool, order: Int, weight: Int, abilities: [PokemonAbility], forms: [PokemonForm], gameIndices: [VersionGameIndex], heldItems: [PokemonHeldItem], locationAreaEncounters: String, moves: [PokemonMove], sprites: PokemonSprites, species: NamedAPIResource, stats: [PokemonStat], types: [PokemonType]) {
        self.id = id
        self.name = name
        self.baseExperience = baseExperience
        self.height = height
        self.isDefault = isDefault
        self.order = order
        self.weight = weight
        self.abilities = abilities
        self.forms = forms
        self.gameIndices = gameIndices
        self.heldItems = heldItems
        self.locationAreaEncounters = locationAreaEncounters
        self.moves = moves
        self.sprites = sprites
        self.species = species
        self.stats = stats
        self.types = types
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case baseExperience = "base_experience"
        case height
        case isDefault = "is_default"
        case order
        case weight
        case abilities
        case forms
        case gameIndices = "game_indices"
        case heldItems = "held_items"
        case locationAreaEncounters = "location_area_encounters"
        case moves
        case sprites
        case species
        case stats
        case types
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(baseExperience, forKey: .baseExperience)
        try container.encode(height, forKey: .height)
        try container.encode(isDefault, forKey: .isDefault)
        try container.encode(order, forKey: .order)
        try container.encode(weight, forKey: .weight)
        try container.encode(abilities, forKey: .abilities)
        try container.encode(forms, forKey: .forms)
        try container.encode(gameIndices, forKey: .gameIndices)
        try container.encode(heldItems, forKey: .heldItems)
        try container.encode(locationAreaEncounters, forKey: .locationAreaEncounters)
        try container.encode(moves, forKey: .moves)
        try container.encode(sprites, forKey: .sprites)
        try container.encode(species, forKey: .species)
        try container.encode(stats, forKey: .stats)
        try container.encode(types, forKey: .types)
    }
}

