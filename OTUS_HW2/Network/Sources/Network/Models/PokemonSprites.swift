//
// PokemonSprites.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PokemonSprites: Codable, JSONEncodable, Hashable {

    /** The default depiction of this Pokémon from the front in battle. */
    public var frontDefault: String?
    /** The shiny depiction of this Pokémon from the front in battle, for female gendered Pokémon. */
    public var frontFemale: String?
    /** The shiny depiction of this Pokémon from the front in battle. */
    public var frontShiny: String?
    /** The shiny depiction of this Pokémon from the front in battle, for female gendered Pokémon. */
    public var frontShinyFemale: String?
    /** The default depiction of this Pokémon from the back in battle. */
    public var backDefault: String?
    /** The shiny depiction of this Pokémon from the back in battle, for female gendered Pokémon. */
    public var backFemale: String?
    /** The shiny depiction of this Pokémon from the back in battle. */
    public var backShiny: String?
    /** The shiny depiction of this Pokémon from the back in battle, for female gendered Pokémon. */
    public var backShinyFemale: String?

    public init(frontDefault: String? = nil, frontFemale: String? = nil, frontShiny: String? = nil, frontShinyFemale: String? = nil, backDefault: String? = nil, backFemale: String? = nil, backShiny: String? = nil, backShinyFemale: String? = nil) {
        self.frontDefault = frontDefault
        self.frontFemale = frontFemale
        self.frontShiny = frontShiny
        self.frontShinyFemale = frontShinyFemale
        self.backDefault = backDefault
        self.backFemale = backFemale
        self.backShiny = backShiny
        self.backShinyFemale = backShinyFemale
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case frontDefault = "front_default"
        case frontFemale = "front_female"
        case frontShiny = "front_shiny"
        case frontShinyFemale = "front_shiny_female"
        case backDefault = "back_default"
        case backFemale = "back_female"
        case backShiny = "back_shiny"
        case backShinyFemale = "back_shiny_female"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(frontDefault, forKey: .frontDefault)
        try container.encodeIfPresent(frontFemale, forKey: .frontFemale)
        try container.encodeIfPresent(frontShiny, forKey: .frontShiny)
        try container.encodeIfPresent(frontShinyFemale, forKey: .frontShinyFemale)
        try container.encodeIfPresent(backDefault, forKey: .backDefault)
        try container.encodeIfPresent(backFemale, forKey: .backFemale)
        try container.encodeIfPresent(backShiny, forKey: .backShiny)
        try container.encodeIfPresent(backShinyFemale, forKey: .backShinyFemale)
    }
}

