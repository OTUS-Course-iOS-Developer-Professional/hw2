//
// Encounter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Encounter: Codable, JSONEncodable, Hashable {

    /** The lowest level the Pokémon could be encountered at. */
    public var minLevel: Int
    /** The highest level the Pokémon could be encountered at. */
    public var maxLevel: Int
    /** The condition which triggers this encounter. */
    public var conditionValues: [EncounterConditionValue]?
    /** Percent chance that this encounter will occur. */
    public var chance: Int?
    public var method: EncounterMethod

    public init(minLevel: Int, maxLevel: Int, conditionValues: [EncounterConditionValue]? = nil, chance: Int? = nil, method: EncounterMethod) {
        self.minLevel = minLevel
        self.maxLevel = maxLevel
        self.conditionValues = conditionValues
        self.chance = chance
        self.method = method
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case minLevel = "min_level"
        case maxLevel = "max_level"
        case conditionValues = "condition_values"
        case chance
        case method
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(minLevel, forKey: .minLevel)
        try container.encode(maxLevel, forKey: .maxLevel)
        try container.encodeIfPresent(conditionValues, forKey: .conditionValues)
        try container.encodeIfPresent(chance, forKey: .chance)
        try container.encode(method, forKey: .method)
    }
}

